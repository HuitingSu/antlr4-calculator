package com.mycompany.app;

/**
 * Hello world!
 *
 
public class App 
{
    public static void main( String[] args )
    {
        System.out.println( "Hello World!" );
    }
}
*/


import java.io.PrintWriter;
import java.util.LinkedList;
import java.util.List;

import org.jline.reader.*;
import org.jline.reader.impl.completer.*;
import org.jline.utils.*;
import org.fusesource.jansi.*;

import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.tree.ParseTree;

import java.io.FileInputStream;
import java.io.InputStream;
/**
 * Sample application to show how jLine can be used.
 *
 * @author sandarenu
 *
 */

public class App {
    private String[] commandsList;
    
    public void init() {
        commandsList = new String[] { "help", "action1", "action2", "exit" };
    }
    
    public static String Calc(String[] args) throws Exception {
        String inputFile = null;
        if ( args.length>0 ) inputFile = args[0];
        InputStream is = System.in;
        if ( inputFile!=null ) is = new FileInputStream(inputFile);
        ANTLRInputStream input = new ANTLRInputStream(is);
        calculatorLexer lexer = new calculatorLexer(input);
        CommonTokenStream tokens = new CommonTokenStream(lexer);
        calculatorParser parser = new calculatorParser(tokens);
        ParseTree tree = parser.prog(); // parse

        EvalVisitor eval = new EvalVisitor();
        eval.visit(tree);
	return eval.getValue().toString();
    }

    public void run() {
        AnsiConsole.systemInstall(); // needed to support ansi on Windows cmd
        printWelcomeMessage();
        LineReaderBuilder readerBuilder = LineReaderBuilder.builder();
        List<Completer> completors = new LinkedList<Completer>();
        
        completors.add(new StringsCompleter(commandsList));
        readerBuilder.completer(new ArgumentCompleter(completors));
        
        LineReader reader = readerBuilder.build();
        
        String line;
        PrintWriter out = new PrintWriter(System.out);
        
        while ((line = readLine(reader, "")) != null) {
            if ("help".equals(line)) {
                printHelp();
            } else if ("action1".equals(line)) {
                AttributedStringBuilder a = new AttributedStringBuilder()
                .append("You have selected ")
                .append("action1", AttributedStyle.BOLD.foreground(AttributedStyle.RED))
                .append("!");
                
                System.out.println(a.toAnsi());
            } else if ("action2".equals(line)) {
                AttributedStringBuilder a = new AttributedStringBuilder()
                .append("You have selected ")
                .append("action2", AttributedStyle.BOLD.foreground(AttributedStyle.RED))
                .append("!");
                
                System.out.println(a.toAnsi());
            } else if ("exit".equals(line)) {
                System.out.println("Exiting application");
                return;
            } else {
                System.out
                .println(Calc(line));
            }
        }
        
        AnsiConsole.systemUninstall();
    }
    
    private void printWelcomeMessage() {
        System.out
        .println("Welcome to jLine Sample App. For assistance press TAB or type \"help\" then hit ENTER.");
        
    }
    
    private void printHelp() {
        System.out.println("help		- Show help");
        System.out.println("action1		- Execute action1");
        System.out.println("action2		- Execute action2");
        System.out.println("exit        - Exit the app");
        
    }
    
    private String readLine(LineReader reader, String promtMessage) {
        try {
            String line = reader.readLine(promtMessage + "\nCalculator> ");
            return line.trim();
        }
        catch (UserInterruptException e) {
            // e.g. ^C
            return null;
        }
        catch (EndOfFileException e) {
            // e.g. ^D
            return null;
        }
    }
    
    public static void main(String[] args) {
        App App1 = new App();
        App1.init();
        App1.run();
    }
}
